@using LemonHiveEcommerce.DTOs
@model IEnumerable<ProductDto>

@{
    ViewData["Title"] = "Product List";
}

<div class="container mt-5">
    <h2>@ViewData["Title"]</h2>

    <form method="get" asp-controller="Product" asp-action="Index">
        <input type="text" name="search" value="@ViewData["Search"]" placeholder="Search..." />
        <button type="submit">Search</button>
    </form>

    <div class="col end-0">
        <a asp-action="Create" class="btn btn-primary">Add New Product</a>
        <a asp-controller="Cart" asp-action="Index" class="btn btn-outline-secondary position-relative">
            View Cart
            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                @ViewData["CartItemCount"]
            </span>
        </a>
    </div>

    <div class="shadow p-3 mb-5 bg-white rounded">
        <table class="table table-striped table-hover table-responsive">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Product Name</th>
                    <th>Price</th>
                    <th>Qty</th>
                    <th class="align-items-center">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var product in Model)
                    {
                        <tr>
                            <td>
                                @product.Id
                            </td>
                            <td>
                                @product.ProductName
                            </td>
                            <td>
                                @product.Price
                            </td>
                            <td>
                                @product.Qty
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@product.Id" class="btn btn-warning">Edit</a>
                                <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-info">Details</a>
                                <a asp-action="Delete" asp-route-id="@product.Id" class="btn btn-danger">Delete</a>
                                <form asp-controller="Cart" asp-action="AddToCart" method="post" class="d-inline">
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <input type="number" name="qty" value="1" />
                                    <button type="submit" class="btn btn-success">Add to Cart</button>
                                </form>

                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">
                            There is no Products
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>




    <!-- pagination -->
    @if ((int)ViewData["TotalPages"] > 1)
    {
        <nav>
            <ul class="pagination">
                @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
                {
                    <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-search="@ViewData["Search"]">@i</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>
