@using LemonHiveEcommerce.DTOs
@model IEnumerable<ProductDto>

@{
    ViewData["Title"] = "Product List";
}

<div class="container my-5">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>@ViewData["Title"]</h2>

        <div>
            <a asp-action="Create" class="btn btn-primary me-2">Add Product</a>
            <a asp-controller="Cart" asp-action="Index" class="btn btn-outline-secondary position-relative">
                View Cart
                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                    @ViewData["CartItemCount"]
                </span>
            </a>
        </div>
    </div>

    <form method="get" asp-controller="Product" asp-action="Index" class="mb-4">
        <div class="input-group">
            <input type="text" name="search" value="@ViewData["Search"]" class="form-control" placeholder="Search..." />
            <button type="submit" class="btn btn-outline-secondary">Search</button>
        </div>
    </form>

    @if (Model != null && Model.Any())
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (var product in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        @* <img src="@product.ImagePath" class="card-img-top" style="height: 200px; object-fit: cover;" alt="@product.ProductName" /> *@

                        @if (!string.IsNullOrEmpty(product.ImagePath))
                        {
                            <img src="@product.ImagePath" alt="@product.ProductName" width="80" />
                        }
                        
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.ProductName</h5>
                            <p class="card-text">
                                <strong>$@product.Price</strong>
                            </p>
                            <div class="mt-auto">
                                <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <div class="input-group mb-2">
                                        <button class="btn btn-outline-secondary" type="button" onclick="adjustQty(this, -1)">-</button>
                                        <input type="number" name="qty" class="form-control text-center" value="1" min="1" />
                                        <button class="btn btn-outline-secondary" type="button" onclick="adjustQty(this, 1)">+</button>
                                    </div>
                                    <button type="submit" class="btn btn-success w-100">Add to Cart</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info mt-4">
            There are no products available.
        </div>
    }
</div>




<!-- pagination -->
@if ((int)ViewData["TotalPages"] > 1)
{
    <nav>
        <ul class="pagination">
            @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
            {
                <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-search="@ViewData["Search"]">@i</a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    <script>
        function adjustQty(button, change) {
            const input = button.parentElement.querySelector('input[name="qty"]');
            let value = parseInt(input.value) || 1;
            value = Math.max(1, value + change);
            input.value = value;
        }
    </script>
}
